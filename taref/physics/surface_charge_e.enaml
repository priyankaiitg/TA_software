# -*- coding: utf-8 -*-
"""
Created on Tue Jan  5 01:08:32 2016

@author: thomasaref
"""

from enaml.widgets.api import MainWindow, VGroup, Form, Label, ObjectCombo, Notebook, Page, GroupBox, DockArea, DockItem, Container, PushButton
from enaml.core.api import Looper
from taref.core.fundcore_e import UnitIntField, aHGroup, aWindow, UnitFloatField, AgentWindow
from taref.core.var_e import EnumVar, UnitFloatVar, UnitIntVar
from taref.core.instrview_e import DynVar, AgentLooper

from enaml.layout.api import HSplitLayout, VSplitLayout, TabLayout, InsertItem, hbox, vbox, spacer

enamldef MaterialDockItem(DockItem):
    name = 'material'
    title = 'Material Properties'
    VGroup:
        attr vmodel = agent
        AgentLooper:
            iterable=("material", "vf", "Dvv", "K2", "epsinf")

enamldef FingerDockItem(DockItem):
    name="finger"
    title = "Finger properties"
    Form:
            attr vmodel = agent
            AgentLooper:
                iterable=("ft", "eta", "ft_mult", "Ct_mult",
                          "f", "f0", "lbda", "lbda0", "k", "k0", "a", "g")
#        Form:
#            attr vmodel = agent
#            UnitFloatVar:
#                vname="f"
#            UnitFloatVar:
#                vname="f0"
#            UnitFloatVar:
#                vname="lbda"
#            UnitFloatVar:
#                vname="lbda0"
#            UnitFloatVar:
#                vname="k"
#            UnitFloatVar:
#                vname="k0"
#            UnitFloatVar:
#                vname="a"
#            UnitFloatVar:
#                vname="g"
#


#enamldef DerivedDockItem(DockItem):
#    name="derived"
#    title = "Derived properties"
#    VGroup:
#        attr vmodel = agent
#        AgentLooper:
#            iterable=("alpha0", "alpha", "fs", "m", "s")

enamldef AlphaDockItem(DockItem):
    name="alpha"
    title = "FT Surface charge"
    VGroup:
        attr vmodel = agent
        AgentLooper:
            iterable=("alpha0", "alpha", "fs", "m", "s")

enamldef PlotDockItem(DockItem):
    name="plots"
    title = "Plots"
    VGroup:
        Looper:
            iterable=agent.plot_func_dict.keys()
            PushButton:
                text = loop_item
                clicked ::
                    agent.add_thread(loop_item, **agent.plot_func_dict[loop_item])
                enabled << agent.busy != True #getattr(agent.thread, "name", None) != loop_item #busy != True
                    #agent.current_plot.show()


enamldef NumericDockItem(DockItem):
    name="numeric"
    title = "Numeric controls"
    aHGroup:
        VGroup:
            attr vmodel = agent
            AgentLooper:
                iterable=("N_fixed", "fixed_freq_min", "fixed_freq_max", "fixed_update", "fixed_reset")
        VGroup:
            attr vmodel = agent
            AgentLooper:
                iterable=("lgf1",)
        VGroup:
            attr vmodel = agent
            AgentLooper:
                iterable=("lgf2",)

enamldef SurfaceChargeDockArea(DockArea):
    layout = VSplitLayout(HSplitLayout('plots', 'material', 'finger', "alpha"), "numeric")

    MaterialDockItem:
        pass
    FingerDockItem:
        pass
    NumericDockItem:
        pass
    AlphaDockItem:
        pass
    PlotDockItem:
        pass

enamldef SurfaceChargeView(AgentWindow):
    VGroup:
        SurfaceChargeDockArea: nb:
            pass

