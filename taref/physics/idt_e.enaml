# -*- coding: utf-8 -*-
"""
Created on Tue Jan  5 01:08:32 2016

@author: thomasaref
"""

from enaml.widgets.api import ScrollArea, MainWindow, VGroup, Form, Label, ObjectCombo, Notebook, Page, GroupBox, DockArea, DockItem, Container, PushButton
from enaml.core.api import Looper, Conditional
from enaml.layout.api import HSplitLayout, VSplitLayout, TabLayout, DockLayout, InsertItem, hbox, vbox, spacer, RetractItem, DockBarLayout

from taref.core.fundcore_e import UnitIntField, aHGroup, aWindow, UnitFloatField, AgentWindow
from taref.core.var_e import EnumVar, UnitFloatVar, UnitIntVar, UnitComplexVar
from taref.core.instrview_e import DynVar, AgentLooper, InstrHolder, AgentVGroup, AgentForm
from taref.physics.surface_charge_e import MaterialDockItem, FingerDockItem, FrequencyDockItem, AlphaDockItem, PlotDockItem, NumericDockItem


#enamldef PinnableDockItem(DockItem):
#    attr pinned : bool = False#self.proxy.widget.isPinned()
#    pinned :: self.proxy.widget.setPinned(pinned)
#    visible :: self.proxy.widget.setPinned(pinned)


enamldef IDTDockItem(DockItem):
    name = 'idt'
    title = 'IDT Properties'
    VGroup:
        attr vmodel = agent
        AgentLooper:
            iterable=( "Np", "W", "Ct", "X", "ef")

enamldef ExtraIDTDockItem(DockItem):
    name = 'extra_idt'
    title = 'extra IDT Properties'
    AgentVGroup:
        vmodel = agent
        iterable=("YL", "rs", "ts", "dloss1", "dloss2", "dL", "Gs", "N_IDT", "L_IDT")

enamldef CoupleIDTDockItem(DockItem):
    name = 'couple_idt'
    title = 'Coupling Properties'
    AgentVGroup:
        vmodel = agent
        iterable=("max_coupling_approx", "max_coupling", "coupling", "Lamb_shift")

enamldef MuIDTDockItem(DockItem):
    name = 'mu_idt'
    title = 'Mu Properties'
    AgentVGroup:
        vmodel = agent
        iterable=( "mus0", "mus", "Y00", "Y0")

enamldef GaIDTDockItem(DockItem):
    name = 'Ga_idt'
    title = 'Ga/Ba Properties'
    AgentVGroup:
        vmodel = agent
        iterable=("Ga0_mult", "Ga0_approx", "Ga0", "Ga", "Ba")

enamldef TypeControlsDockItem(DockItem):
    name = 'type_controls'
    title = 'Type Controls'
    AgentVGroup:
        vmodel = agent
        iterable=("Y0_type", "df_type", "mus_type", "Ga_type", "Ba_type", "rs_type", "S_type")
        #Conditional:
        #    condition << agent.S_type =="RAM"
        #    UnitComplexVar:
        #        vmodel = agent
        #        vname="rs"
        #    UnitFloatVar:
        #        vmodel = agent
        #        vname="ts"

#enamldef FingerDockItem(DockItem):
#    name="finger"
#    title = "Finger properties"
#    Form:
#            attr vmodel = agent
#            AgentLooper:
#                iterable=("ft", "eta", "ft_mult", "Ct_mult",
#                          "f", "f0", "lbda", "lbda0", "k", "k0", "a", "g")
#        Form:
#            attr vmodel = agent
#            UnitFloatVar:
#                vname="f"
#            UnitFloatVar:
#                vname="f0"
#            UnitFloatVar:
#                vname="lbda"
#            UnitFloatVar:
#                vname="lbda0"
#            UnitFloatVar:
#                vname="k"
#            UnitFloatVar:
#                vname="k0"
#            UnitFloatVar:
#                vname="a"
#            UnitFloatVar:
#                vname="g"
#


#enamldef DerivedDockItem(DockItem):
#    name="derived"
#    title = "Derived properties"
#    VGroup:
#        attr vmodel = agent
#        AgentLooper:
#            iterable=("alpha0", "alpha", "fs", "m", "s")


enamldef IDTDockArea(DockArea):
    layout = VSplitLayout(HSplitLayout('plots', 'material', 'finger', "frequency", "alpha"),
                          HSplitLayout("type_controls", "idt", "couple_idt", "mu_idt", "Ga_idt"),
                          HSplitLayout("extra_idt", "numeric"))

    MaterialDockItem:
        pass
    FingerDockItem:
        pass
    FrequencyDockItem:
        pass
    NumericDockItem:
        pass
    AlphaDockItem:
        pass
    PlotDockItem:
        pass
    IDTDockItem:
        pass
    CoupleIDTDockItem:
        pass
    MuIDTDockItem:
        pass
    GaIDTDockItem:
        pass
    ExtraIDTDockItem:
        pass
    TypeControlsDockItem:
        pass

enamldef IDTView(AgentWindow):
    VGroup:
        IDTDockArea:
            pass

